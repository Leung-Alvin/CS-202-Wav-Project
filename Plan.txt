Start: Present start menu
If user selects quit, exit program
Else
  Request filename from user
  Open file specified by filename
  If file does not exist or file is not wav file
    display error message and goto start
  else
    read file metadata
(1) display metadata to user
    present user with processor menu
    If user selects processor option
      request output filename
      run processor
      save file
      goto Start
 

Make the executable: ./wavio

Start Sequence
When we run it, we should ask the user if they want to quit as a parameter "quit" (Function)
"Type "Quit" to quit out of Wavio or type in a wav file name to continue" (Readline cin)
If they type "Quit", we can just return 0.
Else if they type nonexistent file, we ask them to type a valid file, throw error and ask again quit or start (Make into function)
Else if they type noncompatible file, throw error and ask again quit or start
Else, we open the file.

File Intake
"Please type a filename to open"
Create a string and use cin to store a file name
Use an ifstream on said file name
check if ifstream exists,
If not, we throw error and restart the program from Start Sequence
We check if the file is formatted correctly (correct file type (need to figure this out))
If so, we create a constructor of wavheader and wav, store the metadata onto wavheader then store the data
onto wav.
The data needs to be stored in some sort of array so that iteration can be used for later step (normalization)

Metadata Printout
After storing the metadata on the wavheader and the data itself. We can cout the metadata to the user.
Metadata required are: filename, sample rate, bits per sample, and whether or not the wav is stereo or mono.

Processor Menu
We can present a processor menu, maybe with numbers instead of words. The processes required are:
(0) Normalization
(1) Echo
(2) Gain Adjustment

Normalization
Ask for output file name
Iterate over the data array and find hte largest "sample value"

exists
formatted correctly

